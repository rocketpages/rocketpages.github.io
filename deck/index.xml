<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Decks on Kevin Webber</title>
    <link>http://rocketpages.github.io/deck/</link>
    <description>Recent content in Decks on Kevin Webber</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 21 Mar 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://rocketpages.github.io/deck/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Reactive Streams: The Glue of the Real-Time Organization</title>
      <link>http://rocketpages.github.io/deck/reactive-streams-glue/</link>
      <pubDate>Mon, 21 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>http://rocketpages.github.io/deck/reactive-streams-glue/</guid>
      <description>&lt;p&gt;The &amp;ldquo;real-time organization&amp;rdquo; reacts to information now rather than basing critical decisions on stale data. This requires reimagining how data flows through your organization, moving away from data at rest and moving towards a completely event-based streaming architecture. Events become the lifeblood of the organization, while analytics becomes the brain. Organizations that successfully harness the power of real-time event streaming can transform analytical latencies from hours to seconds.&lt;/p&gt;

&lt;p&gt;This session will describe a reference architecture using the Lightbend Reactive Platform and other tools that can be used to build out the real-time organization, leveraging real-time data to produce analytics that result in immediate, actionable insights.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Microservices: Architecture for the Real-time Organization</title>
      <link>http://rocketpages.github.io/deck/microservices-real-time/</link>
      <pubDate>Thu, 11 Feb 2016 00:00:00 +0000</pubDate>
      
      <guid>http://rocketpages.github.io/deck/microservices-real-time/</guid>
      <description>&lt;p&gt;The real-time organization is responsive to change. Real-time organizations architect their systems to evolve naturally as they adapt to the competitive landscape around them. At the core of real-time organizations are microservices. The microservice architecture (MSA) empowers independent teams within large organizations to move at the pace of startups, freeing them from the constraints of “design by committee” and other architectural anti-patterns that ground productivity within the enterprise to a halt.&lt;/p&gt;

&lt;p&gt;We explore all of the relevant patterns of microservices architecture including domain-driven design (DDD), circuit breaker, data pump, saga pattern, distributed transaction, async messaging, etc.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Revitalizing Aging Architectures with Scala, Akka, and Microservices</title>
      <link>http://rocketpages.github.io/deck/aging-arch-with-akka-scala/</link>
      <pubDate>Tue, 01 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>http://rocketpages.github.io/deck/aging-arch-with-akka-scala/</guid>
      <description>&lt;p&gt;When you need to react quickly to competitive threats, but your existing architecture is anything but nimble, what do you do? You will hear the story of how Walmart Canada revitalized its aging architecture with a microservices model built for speed and performance - that efficiently leveraged its JVM infrastructure - to achieve major e-commerce success in just 12 months.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Being Reactive is Good</title>
      <link>http://rocketpages.github.io/deck/being-reactive-is-good/</link>
      <pubDate>Thu, 22 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>http://rocketpages.github.io/deck/being-reactive-is-good/</guid>
      <description>&lt;p&gt;One of the more difficult aspects of systems architecture is finding concrete terms to describe desirable characteristics that everyone understands. Reactive was one of those terms until two years ago, when the Reactive Manifesto was released. Today, over 12,000 people have signed the online document and participated in its evolution. But what does it mean, and how do the principles described by it help developers engineer systems that are elastic, resilient and responsive to users in the face of bursty load and random/unknown failures? We will discuss these topics, as well as clearly discuss the concepts of asynchronous tasks, non-blocking threads, concurrency issues and parallelism.&lt;/p&gt;

&lt;p&gt;The goal of this talk is to frame the term reactive in a positive light, because when it comes to building real-time systems, being reactive is good.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Reactive Web Development with Play 2.3</title>
      <link>http://rocketpages.github.io/deck/reactive-web-development-play/</link>
      <pubDate>Tue, 19 May 2015 00:00:00 +0000</pubDate>
      
      <guid>http://rocketpages.github.io/deck/reactive-web-development-play/</guid>
      <description>&lt;p&gt;We cover every aspect of building a reactive web application with Play 2.3, including integration with AngularJS. We also cover the fundamentals of reactive programming including the importance of embracing futures for async, non-blocking integration.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Introduction to Building Distributed Systems with Scala and Akka</title>
      <link>http://rocketpages.github.io/deck/dist-systems-scala-akka/</link>
      <pubDate>Thu, 09 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>http://rocketpages.github.io/deck/dist-systems-scala-akka/</guid>
      <description>&lt;p&gt;We explore the reasons for building distributed systems framed around the &amp;ldquo;fallacies of distributed computing&amp;rdquo;. We contrast those fallacies against the requirements, constraints, and realities of building a modern system today, using Scala and Akka for all examples.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>